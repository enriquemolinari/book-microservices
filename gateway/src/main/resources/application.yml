forward:
  requestHeaderUserId: "fw-gateway-user-id"
users:
  serverPort: ${server.ms.host}:${port.users}
  tokenCookieParamName: "token"
  uriTokenVerificationPath: "/users/token"
spring:
  cloud:
    gateway:
      routes:
        # Microservices
        # Movies
        - id: movies_private
          uri: ${server.ms.host}:${port.movies}
          predicates:
            - Path=/movies/private/**
          filters:
            - TokenVerificationFilter
        - id: movies_composed
          uri: ${server.ms.host}:${port.composer}
          predicates:
            - Path=/composed/movies/**
        - id: movies_public_get
          uri: ${server.ms.host}:${port.movies}
          predicates:
            - Path=/movies/**
            - Method=GET
        # Shows
        - id: shows_private
          uri: ${server.ms.host}:${port.shows}
          predicates:
            - Path=/shows/private/**
          filters:
            - TokenVerificationFilter
        - id: shows_composed
          uri: ${server.ms.host}:${port.composer}
          predicates:
            - Path=/composed/shows/**
        - id: shows_public
          uri: ${server.ms.host}:${port.shows}
          predicates:
            - Path=/shows/**
        # Users
        - id: users_public
          uri: ${server.ms.host}:${port.users}
          predicates:
            - Path=/users/**
            - Method=POST
        - id: users_private_composed
          uri: ${server.ms.host}:${port.composer}
          predicates:
            - Path=/composed/users/private/**
          filters:
            - TokenVerificationFilter
        - id: users_private
          uri: ${server.ms.host}:${port.users}
          predicates:
            - Path=/users/private/**
          filters:
            - TokenVerificationFilter