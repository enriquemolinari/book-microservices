<persistence xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns="https://jakarta.ee/xml/ns/persistence"
             xsi:schemaLocation="https://jakarta.ee/xml/ns/persistence https://jakarta.ee/xml/ns/persistence/persistence_3_1.xsd"
             version="3.1">

    <persistence-unit name="derby-client-movies-ms">
        <properties>
            <!-- Client Driver -->
            <property name="jakarta.persistence.jdbc.driver"
                      value="org.apache.derby.jdbc.ClientDriver"/>

            <property name="jakarta.persistence.jdbc.url"
                      value="jdbc:derby://localhost:1527/movies;create=true"/>

            <property name="jakarta.persistence.jdbc.user" value="app"/>
            <property name="jakarta.persistence.jdbc.password" value="app"/>

            <property name="hibernate.dialect"
                      value="org.hibernate.dialect.DerbyDialect"/>

            <property name="jakarta.persistence.create-database-schemas"
                      value="true"/>

            <property name="hibernate.hbm2ddl.auto" value="create"/>
            <property name="hibernate.show_sql" value="true"/>
            <property name="hibernate.format_sql" value="true"/>
            <property name="hibernate.jdbc.batch_size" value="20"/>
        </properties>
    </persistence-unit>

    <persistence-unit name="derby-inmemory-movies-ms">
        <properties>
            <property name="javax.persistence.jdbc.driver"
                      value="org.apache.derby.jdbc.EmbeddedDriver"/>

            <property name="javax.persistence.jdbc.url"
                      value="jdbc:derby:memory:movies;create=true"/>

            <property name="jakarta.persistence.jdbc.user" value="app"/>
            <property name="jakarta.persistence.jdbc.password"
                      value="app"/>

            <property name="hibernate.dialect"
                      value="org.hibernate.dialect.DerbyDialect"/>

            <property name="jakarta.persistence.create-database-schemas"
                      value="true"/>

            <property name="hibernate.cache.region.factory_class" value="jcache"/>
            <property name="hibernate.cache.use_second_level_cache" value="true"/>
            <property name="hibernate.cache.use_query_cache" value="true"/>
            <!-- Provider is not needed to be specified if there is only one choice on the classpath -->
            <!--<property name="javax.cache.provider" value="org.ehcache.jsr107.EhcacheCachingProvider"/>-->
            <!-- Query Cache eviction is managed by Hibernate based on changes done on entities that are
                part of the query-->
            <!--<property name="hibernate.javax.cache.uri" value="ehcache.xml"/>-->
            <!-- To enable Hiberante statistics and see how cache is being used -->
            <!-- <property name="hibernate.generate_statistics" value="true"/>-->
            <!-- The default query cache layout AUTO will choose SHALLOW for entities and collections
            that are cacheable and FULL otherwise, because query caching of entity or collection data is
            generally only advisable for high cache hit rates.-->
            <!--<property name="hibernate.cache.query_cache_layout" value="AUTO"/>-->

            <property name="hibernate.hbm2ddl.auto" value="create"/>
            <property name="hibernate.show_sql" value="true"/>
            <property name="hibernate.format_sql" value="false"/>
            <property name="hibernate.jdbc.batch_size" value="20"/>
        </properties>
    </persistence-unit>

</persistence>